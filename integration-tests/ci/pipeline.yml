---
cleanup: &cleanup_plan
  do:
  - get: existing-bbl-env
    resource: bbl-state
  - put: bbl-state
    params:
      command: destroy
      state_dir: existing-bbl-env

resource_types:
- name: bbl-state-resource
  type: docker-image
  source:
    repository: cfinfrastructure/bbl-state-resource

resources:
- name: source
  type: git
  source:
    uri: ((source-repo.uri))
    private_key: ((source-repo.private_key))

- name: task-image
  type: docker-image
  source:
    repository: cloudfoundry/cflinuxfs3
    tag: latest

- name: credhub-bosh-release
  type: bosh-io-release
  source:
    repository: pivotal-cf/credhub-release

- name: uaa-bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/uaa-release

- name: postgres-bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/postgres-release

- name: os-conf-bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/os-conf-release

- name: trusty-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

- name: bbl-state
  type: bbl-state-resource
  source:
    iaas: gcp
    bucket: ((bbl_gcp.bucket))
    gcp_region: ((bbl_gcp.region))
    gcp_service_account_key: ((bbl_gcp.service_account_key))

- name: bbl-cli
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-bootloader
    access_token: ((git-access-token))

- name: bosh-cli
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-cli
    access_token: ((git-access-token))

jobs:
- name: create-test-env
  plan:
  - aggregate:
    - get: task-image
    - get: source
      trigger: true
    - get: credhub-bosh-release
      trigger: true
      params: {tarball: false}
    - get: uaa-bosh-release
      trigger: true
      params: {tarball: false}
  - put: bbl-plan
    resource: bbl-state
    params:
      command: plan
  - task: create-overrides
    image: task-image
    file: source/integration-tests/ci/tasks/create-overrides.yml
  - put: bbl-state
    params:
      command: up
      state_dir: overridden-bbl-plan

- name: deploy-credhub
  plan:
  - aggregate:
    - get: task-image
    - get: bbl-cli
      params:
        globs: ['bbl*linux*']
    - get: bosh-cli
      params:
        globs: ['bosh*linux*']
    - get: state
      resource: bbl-state
      trigger: true
      passed: [create-test-env]
    - get: source
      trigger: true
      passed: [create-test-env]
    - get: credhub-bosh-release
      trigger: true
      passed: [create-test-env]
      params: {tarball: false}
    - get: uaa-bosh-release
      trigger: true
      passed: [create-test-env]
      params: {tarball: false}
    - get: os-conf-bosh-release
      params: {tarball: false}
    - get: postgres-bosh-release
      params: {tarball: false}
    - get: trusty-stemcell
      params: {tarball: false}
  - task: deploy-credhub
    image: task-image
    file: source/integration-tests/ci/tasks/deploy-credhub.yml
  on_failure: *cleanup_plan

- name: run-integration-tests
  plan:
  - aggregate:
    # - get: task-image
    - get: source
      trigger: true
      passed: [deploy-credhub]
    - get: state
      resource: bbl-state   
      trigger: true
      passed: [deploy-credhub]
  on_failure: *cleanup_plan


- name: delete-credhub
  plan:
  - aggregate:
    - get: task-image
    - get: bbl-cli
      params:
        globs: ['bbl*linux*']
    - get: bosh-cli
      params:
        globs: ['bosh*linux*']
    - get: state
      resource: bbl-state
      trigger: true
      passed: [run-integration-tests]
    - get: source
      trigger: true
      passed: [run-integration-tests]
  - task: delete-credhub
    image: task-image
    file: source/integration-tests/ci/tasks/delete-credhub.yml
  ensure: *cleanup_plan
  
- name: manual-destroy-test-env
  plan: 
  - do: *cleanup_plan
